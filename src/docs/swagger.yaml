openapi: 3.0.0
info:
  title: node-boilerplate
  description: api documentation
  version: 1.0.0
servers:
  - url: http://localhost:3000/v1
    description: test server
components:
  schemas:
    User:
      type: object
      properties: 
        id:
          type: string
        email:
          type: string
        username: 
          type: string
    Error:
      type: object
      properties:
        code: 
          type: number
        message:
          type: string
  responses: 
    TakenEmail:
      description: Email is already taken
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Forbidden
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: NotFound
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
tags: 
  - name: auth
    description: authentication
  - name: users
    description: manage users
paths: 
  /auth/register:
    post:
      summary: register new user
      tags: [auth]
      requestBody:
        required: true
        content: 
          application/json:
            schema: 
              type: object
              required:
                - email
                - password
                - username
              properties:
                email: 
                  type: string
                password: 
                  type: string
                username: 
                  type: string
      responses: 
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /auth/login:
    post:
      summary: log in user
      tags: [auth]
      requestBody:
        required: true
        content: 
          application/json:
            schema: 
              type: object
              required:
                - email
                - password
              properties:
                email: 
                  type: string
                password: 
                  type: string
      responses: 
        "200":
          description: Logged In
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users:
    post:
      summary: add a new user
      tags: [users]
      requestBody:
        required: true
        content: 
          application/json:
            schema: 
              type: object
              required:
                - email
                - password
                - username
              properties:
                email: 
                  type: string
                password: 
                  type: string
                username: 
                  type: string
      responses: 
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    get:
      summary: get all users
      tags: [users]
      responses: 
        "200":
          description: OK
          content:
            application/json:
              type: array
              items:
                $ref: '#/components/schemas/User'
    delete:
      summary: delete all users
      tags: [users]
      responses: 
        "204":
          description: No content
  /users/{id}:
    get:
      summary: get user by id
      tags: [users]
      responses: 
        "200":
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/User'
    put:
      summary: update user by id
      tags: [users]
      responses: 
        "200":
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/User'
    delete:
      summary: delete user by id
      tags: [users]
      responses: 
        "204":
          description: No content






                

        
  




                

        
  




    
  